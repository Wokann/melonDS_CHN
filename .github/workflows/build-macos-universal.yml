name: CMake Build (macOS Universal)

on:
  push:
    branches:
      - 0.9.5_CHN_remake
  pull_request:
    branches:
      - master

jobs:
  build-universal:
    runs-on: macos-14
    env:
      BUILD_TYPE: Release
    steps:
      - uses: actions/checkout@v3

      - name: Install ARM64 dependencies
        run: brew install git pkg-config cmake sdl2 qt@6 libslirp libarchive

      - name: Install Rosetta
        run: |
          if ! pgrep oahd >/dev/null; then
            softwareupdate --install-rosetta --agree-to-license
          fi

      - name: Install Rosetta Homebrew if missing
        run: |
          if [ ! -f /usr/local/bin/brew ]; then
            arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi

      - name: Install x86_64 dependencies
        run: arch -x86_64 /usr/local/bin/brew install git pkg-config cmake sdl2 qt@6 libslirp libarchive

      - name: Create ARM64 build directory
        run: mkdir -p ${{ github.workspace }}/build/arm64

      - name: ARM64 Configure
        working-directory: ${{ github.workspace }}/build/arm64
        run: /opt/homebrew/bin/cmake ${{ github.workspace }} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_PREFIX_PATH="/opt/homebrew/opt/qt@6;/opt/homebrew/opt/libarchive" -DPKG_CONFIG_EXECUTABLE=/opt/homebrew/bin/pkg-config -DMACOS_BUNDLE_LIBS=ON -DUSE_QT6=ON

      - name: ARM64 Make
        working-directory: ${{ github.workspace }}/build/arm64
        run: make -j$(sysctl -n hw.logicalcpu)

      - name: Create x86_64 build directory
        run: mkdir -p ${{ github.workspace }}/build/x86_64

      - name: x86_64 Configure
        working-directory: ${{ github.workspace }}/build/x86_64
        run: arch -x86_64 /usr/local/bin/cmake ${{ github.workspace }} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_PREFIX_PATH="/usr/local/opt/qt@6;/usr/local/opt/libarchive" -DPKG_CONFIG_EXECUTABLE=/usr/local/bin/pkg-config -DMACOS_BUNDLE_LIBS=ON -DUSE_QT6=ON

      - name: x86_64 Make
        working-directory: ${{ github.workspace }}/build/x86_64
        run: arch -x86_64 make -j$(sysctl -n hw.logicalcpu)

      - name: Create universal build directory
        run: mkdir -p ${{ github.workspace }}/build/universal

      - name: Merge universal binaries
        run: ${{ github.workspace }}/tools/mac-universal.py ${{ github.workspace }}/build/arm64/melonDS.app ${{ github.workspace }}/build/x86_64/melonDS.app ${{ github.workspace }}/build/universal/melonDS.app

      - name: Create DMG
        run: hdiutil create -fs HFS+ -volname melonDS -srcfolder ${{ github.workspace }}/build/universal/melonDS.app -ov -format UDBZ ${{ github.workspace }}/build/universal/melonDS.dmg

      - name: Upload universal artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-universal
          path: ${{ github.workspace }}/build/universal/melonDS.dmg
